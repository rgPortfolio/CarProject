// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210813140739_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("API.Entities.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EngineDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExteriorDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InteriorDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SafetyDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EngineDetailId");

                    b.HasIndex("ExteriorDetailId");

                    b.HasIndex("InteriorDetailId");

                    b.HasIndex("SafetyDetailId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("API.Entities.EngineDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<decimal>("Liters")
                        .HasColumnType("decimal(2,1)");

                    b.Property<bool>("Turbo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EngineDetails");
                });

            modelBuilder.Entity("API.Entities.ExteriorDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Rims")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("ExteriorDetails");
                });

            modelBuilder.Entity("API.Entities.InteriorDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasAndroidAutoOrCarPlay")
                        .HasColumnType("bit");

                    b.Property<string>("SoundSystem")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Upholstery")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("InteriorDetails");
                });

            modelBuilder.Entity("API.Entities.SafetyDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2,1)");

                    b.HasKey("Id");

                    b.ToTable("SafetyDetails");
                });

            modelBuilder.Entity("API.Entities.Car", b =>
                {
                    b.HasOne("API.Entities.Detail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("API.Entities.Detail", b =>
                {
                    b.HasOne("API.Entities.EngineDetail", "EngineDetail")
                        .WithMany()
                        .HasForeignKey("EngineDetailId");

                    b.HasOne("API.Entities.ExteriorDetail", "ExteriorDetail")
                        .WithMany()
                        .HasForeignKey("ExteriorDetailId");

                    b.HasOne("API.Entities.InteriorDetail", "InteriorDetail")
                        .WithMany()
                        .HasForeignKey("InteriorDetailId");

                    b.HasOne("API.Entities.SafetyDetail", "SafetyDetail")
                        .WithMany()
                        .HasForeignKey("SafetyDetailId");

                    b.Navigation("EngineDetail");

                    b.Navigation("ExteriorDetail");

                    b.Navigation("InteriorDetail");

                    b.Navigation("SafetyDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
